{"version":3,"sources":["Círculo_Carcajadas__1_-removebg-preview.png","components/body2.0.js","App.js","reportWebVitals.js","index.js"],"names":["CoinGecko","Body","useState","criptos","setCriptos","search","setSearch","fetchingData","a","fetch","res","json","data","console","log","error","useEffect","filteredCoins","filter","coin","name","toLowerCase","includes","formatDollar","number","maxSignificantDigits","Intl","NumberFormat","style","currency","format","backgroundColor","width","class","marginLeft","src","logo","alt","height","marginRight","className","type","placeholder","onChange","e","target","value","justifyContent","alignItems","alignContent","display","float","zIndex","color","map","image","symbol","toUpperCase","price_change_percentage_24h","Number","toFixed","current_price","market_cap","id","flexDirection","href","textDecoration","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f967e74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Círculo_Carcajadas__1_-removebg-preview.84a5c95b.png\";","import React, {useState, useEffect} from \"react\"\nimport CoinGecko from \"coingecko-api\";\nimport logo from \"../Círculo_Carcajadas__1_-removebg-preview.png\"\n\nconst CoinGeckoClient = new CoinGecko()\n\nexport default function Body(){\n    \n    const [criptos, setCriptos] = useState([])\n    const [search, setSearch] = useState(\"\");\n    \n\n\n  const fetchingData = async() => {\n    try{\n      const res = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false\")\n      const data = await res.json()\n\n\n      setCriptos(data)\n      console.log(data)\n    }catch(error){\n      console.error(error)\n    }\n  }\n\n  useEffect(async() => {\n    await fetchingData()\n}, [])\nconst handleChange = e => {\n  setSearch(e.target.value);\n};\n   \nconst filteredCoins = criptos.filter(coin =>\n  coin.name.toLowerCase().includes(search.toLowerCase())\n);\n\n\n\n\n\n\n\nconst formatPercent = number => `${new Number(number).toFixed(2)}%`\n\nconst formatDollar = (number, maxSignificantDigits) => \nnew Intl.NumberFormat(\n  \"en-US\",\n  {\n    style:\"currency\",\n    currency:\"usd\",\n    maxSignificantDigits\n  }\n).format(number)\nreturn (\n\n\n <div  style={{backgroundColor:\"#264653\", width:\"100%\"}}>\n\n<nav class=\"navbar navbar-dark \" style={{backgroundColor:\"#1d3557\",width:\"100%\" }} >\n<div style={{marginLeft:\"32%\"}}>\n<img src={logo} alt=\"Logo\" style={{height:\"200px\", width:\"200px\"}}/>\n</div>\n\n    <div  style={{width:\"80%\", marginLeft:\"20px\", marginRight:\"20px\"}}>\n     <form class=\"form-inline my-2 my-lg-0\">\n     <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search...\" onChange={handleChange} />\n\n    </form></div>\n     \n</nav>\n\n   \n   <div style={{}}>\n   \n   </div>\n\n   <div style={{width:\"50%\", justifyContent:\"center\", alignItems:\"center\", alignContent:\"center\", display:\"flex\",  float:\"center\", zIndex:\"2\"}}>\n \n   </div>\n \n   <table className=\"table\">\n     <thead>\n\n     <tr>\n     <th style={{color:\"white\"}}>Coin</th>\n     <th style={{color:\"white\"}}>24H</th>\n     <th style={{color:\"white\"}}>Price</th>\n     <th style={{color:\"white\"}}>Market Cap</th>\n   </tr>\n   </thead>\n   \n  \n     \n\n   {/*filter(val => {\n     if(searchTerm === \"\"){\n       return val\n     }else if(val.symbol.toLowerCase().includes(searchTerm.toLowerCase())){\n          return val\n     }\n   })\n   \n    <tr >\n       <td style={{color:\"white\"}}> <img src={coin.image} style={{width:25, height: 25, marginRight:10}}/>{coin.symbol.toUpperCase()}</td>\n       <td > <span className={coin.price_change_percentage_24h > 0 ? (\"text-success\") : (\"text-danger\")}>{formatPercent(coin.price_change_percentage_24h)}</span></td>\n       <td style={{color:\"white\"}}>{formatDollar(coin.current_price, 20)}</td>\n       <td style={{color:\"white\"}}>{formatDollar(coin.market_cap,12)}</td>\n     </tr>\n   */}\n  \n  \n  \n  \n  \n  {/*\n  {criptos.filter((coin) =>{\n     if(searchTerm === \"\"){\n       return coin;\n     }else if(coin.symbol.toLowerCase().includes(searchTerm.toLowerCase())){\n      return coin\n     }\n   } \n   )}\n   */}\n   <tbody>\n  \n  {filteredCoins.map(coin => {\n    return (\n      <tr key={coin.id}>\n      <td style={{color:\"white\"}}> <img src={coin.image} style={{width:25, height: 25, marginRight:10}}/>{coin.symbol.toUpperCase()}</td>\n      <td > <span className={coin.price_change_percentage_24h > 0 ? (\"text-success\") : (\"text-danger\")}>{formatPercent(coin.price_change_percentage_24h)}</span></td>\n      <td style={{color:\"white\"}}>{formatDollar(coin.current_price, 20)}</td>\n      <td style={{color:\"white\"}}>{formatDollar(coin.market_cap,12)}</td>\n    </tr>\n    )\n  })}\n   </tbody>\n   </table>\n<div class=\"navbar navbar-dark \" style={{backgroundColor:\"#1d3557\",width:\"100%\", height:\"100px\" , flexDirection:\"row\"}}>\n<div style={{marginLeft:\"10%\"}}>\n<p ><a href=\"https://www.coingecko.com/en/api\" target=\"_blank\" style={{textDecoration:\"none\", color:\"white\", textAlign:\"center\"}}>Api</a></p> \n</div>\n\n<div style={{width:\"80%\", marginLeft:\"10%\"}}>\n<p style={{textDecoration:\"none\", color:\"white\"}}>Made By <a href=\"#\" style={{textDecoration:\"none\", color:\"white\", textAlign:\"center\"}}>Lautaro Suarez</a></p>\n</div>\n\n\n</div>\n\n </div>\n  \n\n  \n)\n}\n\n\n\n/*\nexport async function getServerSideProps(context){\nconst params = {\n  order: CoinGecko.ORDER_MARKET_CAP_DESC\n}\nconst result = await CoinGeckoClient.coins.markets({params})\nreturn{\n  props: {\n    result\n  }\n};\n}*/\n","\nimport './App.css';\nimport Body from \"./components/body2.0\"\nimport CoinGecko from \"coingecko-api\";\n//import logo from \"../Círculo_Carcajadas__1_-removebg-preview.png\"\n\nconst CoinGeckoClient = new CoinGecko()\n\nfunction App() {\n/*  var dataa;\n  var data;\n\n  var func = async() => {\n     data = await await CoinGeckoClient.coins.markets();\n     console.log(data.data)\n\n  }*/\n\n\n  //put the total of active criptos on the top\n  //  let data = await CoinGeckoClient.global();\n  //console.log(data.data.data.active_cryptocurrencies)\n  \n\n  return (\n   <Body/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}