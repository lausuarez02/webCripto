{"version":3,"sources":["logo.svg","components/body.js","App.js","reportWebVitals.js","index.js"],"names":["CoinGeckoClient","require","Body","useState","name","setName","image","setImage","price","setPrice","ename","setEname","eimage","setEimage","setEprice","a","coins","all","data","console","log","large","market_data","current_price","eur","func","class","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,4CCKTA,EAAkB,IAHNC,EAAQ,KAwCPC,EAnCN,WAAM,MAGSC,mBAAS,IAHlB,mBAGRC,EAHQ,KAGFC,EAHE,OAIWF,mBAAS,IAJpB,mBAIRG,EAJQ,KAIDC,EAJC,OAKWJ,mBAAS,IALpB,mBAKRK,EALQ,KAKDC,EALC,OAOWN,mBAAS,IAPpB,mBAORO,EAPQ,KAODC,EAPC,OAQaR,mBAAS,IARtB,mBAQRS,EARQ,KAQAC,EARA,OAScV,mBAAS,IATvB,mBASCW,GATD,WAsBf,OAXQ,uCAAG,4BAAAC,EAAA,sEACUf,EAAgBgB,MAAMC,MADhC,OACHC,EADG,OAEPC,QAAQC,IAAIF,EAAKA,KAAK,IACrBb,EAAQa,EAAKA,KAAK,GAAGd,MACrBG,EAASW,EAAKA,KAAK,GAAGZ,MAAMe,OAC5BZ,EAASS,EAAKA,KAAK,GAAGI,YAAYC,cAAcC,KAChDb,EAASO,EAAKA,KAAK,GAAGd,MACtBS,EAAUK,EAAKA,KAAK,GAAGZ,MAAMe,OAC7BP,EAAUI,EAAKA,KAAK,GAAGI,YAAYC,cAAcC,KAR3C,4CAAH,oDAUNC,GAEE,sBAAKC,MAAM,qCAAX,UACI,6BACI,+BAAI,qBAAKC,IAAKrB,EAAOsB,IAAI,QAAzB,IAAkCxB,EAAlC,IAAyCI,OAE7C,6BACI,+BAAI,qBAAKmB,IAAKf,EAAQgB,IAAI,QAA1B,IAAmClB,EAAnC,IAA2CF,WCzB5CqB,MANf,WACE,OACD,cAAC,EAAD,KCMcC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ae93a9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from \"react\"\n\nconst CoinGecko = require('coingecko-api');\n\n\nconst CoinGeckoClient = new CoinGecko();\n\nconst Body = () => {\n\n    //btc\n    const [name, setName] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [price, setPrice] = useState(\"\");\n    //eth\n    const [ename ,setEname] = useState(\"\");\n    const [eimage, setEimage] = useState(\"\");\n    const [ eprice, setEprice] = useState(\"\");\n\n    var func = async() => {\n        let data = await CoinGeckoClient.coins.all();\n        console.log(data.data[0])\n         setName(data.data[0].name)\n         setImage(data.data[0].image.large)\n         setPrice(data.data[0].market_data.current_price.eur)\n         setEname(data.data[1].name)\n         setEimage(data.data[1].image.large)\n         setEprice(data.data[1].market_data.current_price.eur)\n      };\n      func();\n    return(\n        <div class=\"shadow-lg p-3 mb-5 bg-body rounded\">\n            <ul>\n                <li><img src={image} alt=\"btc\"/> {name} {price}</li>\n            </ul>\n            <ul>\n                <li><img src={eimage} alt=\"eth\"/> {ename} {price}</li>\n            </ul>\n\n        </div>\n    )\n    }\n\n    export default Body;","import logo from './logo.svg';\nimport './App.css';\nimport Body from \"./components/body\"\n\nfunction App() {\n  return (\n <Body/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}